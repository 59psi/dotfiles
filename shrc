# vim:set ft=sh et sw=2:

remove_path () {
  local IFS=':'
  local dir val
  local var="$1"
  for dir in ${!var}; do
    [ -d "$dir" -a "$dir" != "$2" ] && val="${val:+$val:}$dir"
  done
  eval $var="$val"
}

prepend_path () {
  local dir
  local var="$1"
  shift
  for dir in "$@"; do
    remove_path "$var" "$dir"
    [ -d "$dir" ] && eval "${var}=${dir}:\$${var}"
  done
}

append_path () {
  local dir
  local var="$1"
  shift
  for dir in "$@"; do
    remove_path "$var" "$dir"
    [ -d "$dir" ] && eval "${var}=\$${var}:${dir}"
  done
}

prepend_path PATH /sbin /usr/sbin /bin /usr/bin
prepend_path PATH /usr/local/sbin /usr/local/bin
prepend_path PATH /usr/local/share/python
prepend_path PATH "$HOME/bin"
append_path  PATH /usr/local/texbin

if [ -d "/opt/X11" ]; then
  append_path PATH /opt/X11/bin
elif [-d "/usr/X11" ]; then
  append_path PATH /usr/X11/bin
fi

prepend_path MANPATH /usr/share/man /usr/local/share/man
prepend_path INFOPATH /usr/share/info /usr/local/share/info

export PATH MANPATH INFOPATH


agent="$HOME/.gnupg/agent.env"
if [ -f "$agent" ] && kill -0 "$(grep -e "GPG_AGENT_INFO" "$agent" | cut -d: -f 2)" 2>/dev/null
then
  eval "$(cat "$agent")"
else
  eval "$(gpg-agent --daemon --write-env-file="$agent")"
fi
unset agent
GPG_TTY=$(tty)
export GPG_TTY GPG_AGENT_INFO


bold="\[\033[1m\]"
blue="\[\033[0;34m\]"
cyan="\[\033[0;36m\]"
green="\[\033[0;32m\]"
reset="\[\033[0m\]"

for file in "$HOME/src/git/contrib/completion/git-prompt.sh"; do
  if [ -f "$file" ]; then
    . "$file"
    GIT_PS1_SHOWDIRTYSTATE=1
    GIT_PS1_SHOWSTASHSTATE=1
    GIT_PS1_SHOWUNTRACKEDFILES=1
    GIT_PS1_SHOWUPSTREAM="auto"
    export GIT_PS1_SHOWDIRTYSTATE GIT_PS1_SHOWSTASHSTATE
    export GIT_PS1_SHOWUNTRACKEDFILES GIT_PS1_SHOWUPSTREAM
    prompt_git='$(__git_ps1 "'${green}'(%s)'${reset}'")'
    break;
  fi
done

prompt_prefix="\u@\h${blue}:\W${reset}"
prompt_suffix="${bold} \$${reset} "

PS1="${prompt_prefix}${prompt_git}${prompt_suffix}"
PS2="${bold}..>${reset} "

unset prompt_git prompt_prefix prompt_suffix


alias cd..="cd .."
alias du1="du -h -d1"
alias sqlite="sqlite3"
alias vi="vim"
alias be="bundle exec"
alias bi="bundle install"
alias bis="bundle install --standalone --binstubs"


AWS_CONFIG_FILE="$HOME/.awsconfig"
if [ -f "$AWS_CONFIG_FILE" ]; then
  export AWS_CONFIG_FILE
else
  unset AWS_CONFIG_FILE
fi

SSL_CERT_FILE=/usr/local/opt/curl-ca-bundle/share/ca-bundle.crt
if [ -f "$SSL_CERT_FILE" ]; then
  export SSL_CERT_FILE
else
  unset SSL_CERT_FILE
fi

case "$(uname)" in
  Darwin)
    HOMEBREW_KEEP_INFO=1
    HOMEBREW_DEVELOPER=1
    HOMEBREW_CC=gcc
    export HOMEBREW_KEEP_INFO HOMEBREW_DEVELOPER HOMEBREW_CC
    ;;
esac
